apply plugin: 'maven-publish'
if (!isGrailsPlugin) {
    apply plugin: 'com.bmuschko.nexus'
}


ext.pomInfo = {
    delegate.name project.title
    delegate.description project.projectDesc
    delegate.url projectUrl

    delegate.licenses {
        delegate.license {
            delegate.name 'The Apache Software License, Version 2.0'
            delegate.url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            delegate.distribution 'repo'
        }
    }

    delegate.scm {
        delegate.url "scm:git@github.com:${githubSlug}.git"
        delegate.connection "scm:git@github.com:${githubSlug}.git"
        delegate.developerConnection "scm:git@github.com:${githubSlug}.git"
    }

    if (developers) {
        delegate.developers {
            for (dev in developers.split(',')) {
                delegate.developer {
                    delegate.id dev.toLowerCase().replace(' ', '')
                    delegate.name dev
                }
            }
        }
    }
}

if (!isGrailsPlugin) {
    modifyPom {
        project(pomInfo)
    }
}
tasks.named("publish").get().dependsOn assembleServerAndClient
publishing {
    repositories {
        maven {
            credentials {
                username = 'docker'
                if (file("${System.properties['user.home']}/.docker/nexus.devexpert.eu.password").exists()) {
                    password = file("${System.properties['user.home']}/.docker/nexus.devexpert.eu.password").text
                } else {
                    password = "${System.env.NEXUS_DEVEXPERT_EU_PASSWORD}"
                }
            }

            if (isBuildSnapshot) {
                url "http://nexus.devexpert.eu/repository/mvn-dev"
            } else {
                url "http://nexus.devexpert.eu/repository/mvn-release"
            }

        }
    }

    publications {
        maven(MavenPublication) {
            artifactId(projectName)
            if (true) {
                artifacts {
                    archives( file("$buildDir/${projectName}-${projectVersion}.jar")){
                        name 'myhab'
                        type 'jar'
                        builtBy "spring"
                    }
                }
                artifact source: file("$buildDir/${projectName}-${projectVersion}.jar")


            } else {
                from components.java
                afterEvaluate {
                    artifact source: sourcesJar, classifier: "sources"
                    artifact source: javadocJar, classifier: "javadoc"
                }
                if (isGrailsPlugin) {
                    artifact source: "${project.buildDir}/classes/groovy/main/META-INF/grails-plugin.xml",
                            classifier: "plugin",
                            extension: 'xml'
                }
            }
            version(projectVersion)


            pom.withXml {
                def xml = asNode()

                xml.children().last() + pomInfo
            }

        }
    }
}