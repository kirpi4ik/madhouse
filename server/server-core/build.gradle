buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:views-gradle:2.1.2"
        classpath "org.grails.plugins:hibernate5:$hibernateVersion"
        classpath 'org.grails.plugins:quartz:2.0.13'
    }
}

apply plugin: "java"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'codenarc'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://oss.jfrog.org/repo/" }
    maven {
        url "http://nexus.devexpert.eu/repository/maven"
        allowInsecureProtocol true
        credentials {
            username = 'docker'
            if (file("${System.properties['user.home']}/.docker/nexus.devexpert.eu.password").exists()) {
                password = file("${System.properties['user.home']}/.docker/nexus.devexpert.eu.password").text
            } else {
                password = "${System.env.NEXUS_DEVEXPERT_EU_PASSWORD}"
            }
        }
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
//    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:vue"
    implementation project(':server-rules')
    implementation project(':server-config')

    implementation 'io.micronaut:micronaut-core:3.2.6'
    implementation 'io.micrometer:micrometer-core:latest.release'
    implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-codecs"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-datasource"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:spring-security-rest:3.0.1"
    implementation "org.grails.plugins:views-json"
    implementation "org.grails.plugins:views-json-templates"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:gsp"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.3.Final"
    implementation "org.grails.plugins:gorm-graphql-plugin:2.0.2.BUILD-SNAPSHOT"
    implementation 'org.grails.plugins:quartz:2.0.13'
    implementation 'org.quartz-scheduler:quartz:2.3.2' // Is not pulled in by default?
    //cache
    implementation 'com.hazelcast:hazelcast:5.0.2'
    implementation 'com.hazelcast:hazelcast-spring:5.0.2'
    implementation 'org.postgresql:postgresql:42.3.1'
    implementation 'org.grails.plugins:spring-security-rest:3.0.1'
    implementation 'org.kohsuke:groovy-sandbox:1.19'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'com.konghq:unirest-java:3.13.6'
    //Telegram bot api
    implementation 'org.telegram:telegrambots-spring-boot-starter:5.6.0'
    //ONVIF
    implementation 'be.teletask.onvif:onvif:1.0.2'
    //opsgenie atlassian
    implementation "com.opsgenie.integration:sdk:2+"
    //LogBack kibana integration
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-access:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.2'

    implementation 'org.grails.plugins:grails-spring-websocket:2.5.0.RC1'
    implementation "org.springframework.integration:spring-integration-mqtt"
    implementation 'org.springframework.integration:spring-integration-jmx'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'

    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-messaging"
    implementation "org.springframework.security:spring-security-web"

    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"

    codenarc "org.codenarc:CodeNarc:$codenarcVersion"

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails:views-json-testing-support"
    testImplementation "org.hibernate.validator:hibernate-validator:6.1.7.Final"
}
bootRun {
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m'
            /*,'-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'*/)
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

bootJar {
    rootSpec.filesMatching('**/*.jar', { jar ->
        String groupId = jar.file.parentFile.parentFile.parentFile.parentFile.name
        jar.name = "$groupId-${jar.name}"
    })
    archiveFileName = "${projectName}-${project.version}.jar"
}
//sourceSets {
//    main {
//        groovy {
//            srcDirs = ['grails-app/controllers',
//                       'grails-app/domain',
//                       'grails-app/init',
//                       'grails-app/jobs',
//                       'grails-app/services',
//                       'grails-app/utils']
//        }
//    }
//}
codenarc {
    toolVersion = codenarcVersion
    configFile = file("${projectDir}/config/codenarc/rules.groovy")
    maxPriority1Violations = 0
    maxPriority2Violations = 200
    maxPriority3Violations = 1500
}
codenarcMain {
    exclude '**/CustomScalars.groovy'
}

codenarcTest {
    ignoreFailures = true
}